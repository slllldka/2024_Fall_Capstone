# Generated by Django 5.1.1 on 2024-12-27 17:56

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FiveDayCalorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(default=0)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('calorie', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('calorie', models.IntegerField(default=0)),
                ('carbohydrate', models.IntegerField(default=0)),
                ('protein', models.IntegerField(default=0)),
                ('fat', models.IntegerField(default=0)),
                ('cuisine', models.CharField(default=' ', max_length=30)),
                ('description', models.TextField(default=' ')),
                ('vegan', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoodAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.allergy')),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('food_id', 'allergy_id'), name='unique_food_id_allergy_id_micro')],
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=30)),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('food_id', 'category'), name='unique_food_id_category_micro')],
            },
        ),
        migrations.CreateModel(
            name='FoodCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristic', models.CharField(max_length=30)),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('food_id', 'characteristic'), name='unique_food_id_characteristic_micro')],
            },
        ),
        migrations.CreateModel(
            name='FoodKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=30)),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('food_id', 'keyword'), name='unique_food_id_keyword_micro')],
            },
        ),
        migrations.CreateModel(
            name='IngredientInFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
                ('ingredient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.ingredient')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('ingredient_id', 'food_id'), name='unique_ingredient_id_food_id_micro')],
            },
        ),
        migrations.CreateModel(
            name='SelectedFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(default=0)),
                ('date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('calorie', models.IntegerField(default=0)),
                ('food_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.food')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user_id', 'date_time'), name='unique_user_id_date_time_food_micro')],
            },
        ),
        migrations.CreateModel(
            name='UserAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(default=0)),
                ('allergy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food_app.allergy')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user_id', 'allergy_id'), name='unique_user_id_allergy_id_micro')],
            },
        ),
    ]
